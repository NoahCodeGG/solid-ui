{
  "name": "number-field",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "number-field.tsx",
      "content": "import { NumberField as NumberFieldPrimitive } from '@kobalte/core'\nimport { type Component, splitProps } from 'solid-js'\n\nimport { cn } from '~/lib/utils'\n\nconst NumberField = NumberFieldPrimitive.Root\n\nconst NumberFieldLabel: Component<NumberFieldPrimitive.NumberFieldLabelProps> = (props) => {\n  const [, rest] = splitProps(props, ['class'])\n  return (\n    <NumberFieldPrimitive.Label\n      class={cn(\n        'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n        props.class,\n      )}\n      {...rest}\n    />\n  )\n}\n\nconst NumberFieldInput: Component<NumberFieldPrimitive.NumberFieldInputProps> = (props) => {\n  const [, rest] = splitProps(props, ['class'])\n  return (\n    <NumberFieldPrimitive.Input\n      class={cn(\n        'flex h-10 w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n        props.class,\n      )}\n      {...rest}\n    />\n  )\n}\n\nconst NumberFieldIncrementTrigger: Component<NumberFieldPrimitive.NumberFieldIncrementTriggerProps> = (props) => {\n  const [, rest] = splitProps(props, ['class'])\n  return (\n    <NumberFieldPrimitive.IncrementTrigger\n      class={cn(\n        'inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n        props.class,\n      )}\n      {...rest}\n    />\n  )\n}\n\nconst NumberFieldDecrementTrigger: Component<NumberFieldPrimitive.NumberFieldDecrementTriggerProps> = (props) => {\n  const [, rest] = splitProps(props, ['class'])\n  return (\n    <NumberFieldPrimitive.DecrementTrigger\n      class={cn(\n        'inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n        props.class,\n      )}\n      {...rest}\n    />\n  )\n}\n\nconst NumberFieldDescription: Component<NumberFieldPrimitive.NumberFieldDescriptionProps> = (props) => {\n  const [, rest] = splitProps(props, ['class'])\n  return <NumberFieldPrimitive.Description class={cn('text-sm text-muted-foreground', props.class)} {...rest} />\n}\n\nconst NumberFieldErrorMessage: Component<NumberFieldPrimitive.NumberFieldErrorMessageProps> = (props) => {\n  const [, rest] = splitProps(props, ['class'])\n  return <NumberFieldPrimitive.ErrorMessage class={cn('text-sm text-destructive-foreground', props.class)} {...rest} />\n}\n\nexport {\n  NumberField,\n  NumberFieldLabel,\n  NumberFieldInput,\n  NumberFieldIncrementTrigger,\n  NumberFieldDecrementTrigger,\n  NumberFieldDescription,\n  NumberFieldErrorMessage,\n}\n"
    }
  ],
  "type": "ui"
}
