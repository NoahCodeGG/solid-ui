{
  "name": "number-field",
  "dependencies": [
    "@kobalte/core"
  ],
  "files": [
    {
      "name": "number-field.tsx",
      "content": "import { splitProps, type Component } from \"solid-js\"\n\nimport { NumberField as NumberFieldPrimitive } from \"@kobalte/core\"\nimport { TbChevronDown, TbChevronUp } from \"solid-icons/tb\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst NumberField = NumberFieldPrimitive.Root\n\nconst NumberFieldLabel: Component<NumberFieldPrimitive.NumberFieldLabelProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <NumberFieldPrimitive.Label\n      class={cn(\n        \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n        props.class\n      )}\n      {...rest}\n    />\n  )\n}\n\nconst NumberFieldInput: Component<NumberFieldPrimitive.NumberFieldInputProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <NumberFieldPrimitive.Input\n      class={cn(\n        \"flex h-10 w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[invalid]:border-error-foreground data-[invalid]:text-error-foreground\",\n        props.class\n      )}\n      {...rest}\n    />\n  )\n}\n\nconst NumberFieldIncrementTrigger: Component<\n  NumberFieldPrimitive.NumberFieldIncrementTriggerProps\n> = (props) => {\n  const [, rest] = splitProps(props, [\"class\", \"children\"])\n  return (\n    <NumberFieldPrimitive.IncrementTrigger\n      class={cn(\n        \"absolute right-1 top-1 inline-flex size-4 items-center justify-center\",\n        props.class\n      )}\n      {...rest}\n    >\n      {props.children ?? <TbChevronUp />}\n    </NumberFieldPrimitive.IncrementTrigger>\n  )\n}\n\nconst NumberFieldDecrementTrigger: Component<\n  NumberFieldPrimitive.NumberFieldDecrementTriggerProps\n> = (props) => {\n  const [, rest] = splitProps(props, [\"class\", \"children\"])\n  return (\n    <NumberFieldPrimitive.DecrementTrigger\n      class={cn(\n        \"absolute bottom-1 right-1 inline-flex size-4 items-center justify-center\",\n        props.class\n      )}\n      {...rest}\n    >\n      {props.children ?? <TbChevronDown />}\n    </NumberFieldPrimitive.DecrementTrigger>\n  )\n}\n\nconst NumberFieldDescription: Component<NumberFieldPrimitive.NumberFieldDescriptionProps> = (\n  props\n) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <NumberFieldPrimitive.Description\n      class={cn(\"text-sm text-muted-foreground\", props.class)}\n      {...rest}\n    />\n  )\n}\n\nconst NumberFieldErrorMessage: Component<NumberFieldPrimitive.NumberFieldErrorMessageProps> = (\n  props\n) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <NumberFieldPrimitive.ErrorMessage\n      class={cn(\"text-sm text-error-foreground\", props.class)}\n      {...rest}\n    />\n  )\n}\n\nexport {\n  NumberField,\n  NumberFieldLabel,\n  NumberFieldInput,\n  NumberFieldIncrementTrigger,\n  NumberFieldDecrementTrigger,\n  NumberFieldDescription,\n  NumberFieldErrorMessage\n}\n"
    }
  ],
  "type": "ui"
}